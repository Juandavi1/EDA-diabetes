b <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
b <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
#select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
#select(-Patient, -HeartRate.x, -HeartRate.y)
```
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
#select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
#select(-Patient, -HeartRate.x, -HeartRate.y)
```
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
#select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
#select(-Patient, -HeartRate.x, -HeartRate.y)
```
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic))
diabetes
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
diabetes_scaled <- predict(preProcessDiabetes,diabetes)
e <- prcomp(diabetes_scaled)
ggplotly(fviz_cos2(e, choice = "var"))
b <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
b$eig
b$var$contrib
as.data.frame(b$svd$U)
b$var$contrib
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
#select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
select(-Patient, -HeartRate.x, -HeartRate.y)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
diabetes_scaled <- predict(preProcessDiabetes,diabetes)
e <- prcomp(diabetes_scaled)
ggplotly(fviz_cos2(e, choice = "var"))
library(FactoMineR)
b <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
b$eig
b$var$contrib
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
diabetes_scaled <- predict(preProcessDiabetes,diabetes)
b <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
b$eig
b$var$contrib
b <- PCA(diabetes_scaled, graph=TRUE, ncp=4)
b$eig
b$var$contrib
as.data.frame(b$svd$U)
ggplotly(fviz_cos2(b, choice = "var"))
ggplotly(fviz_cos2(b, choice = "var", axes = 2))
b$var$contrib
ggplotly(fviz_cos2(b, choice = "var", axes = 2:3))
diabetes_scaled <- as.data.frame(predict(preProcessDiabetes,diabetes))
diabetes_scaled
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
diabetes_scaled <- as.data.frame(predict(preProcessDiabetes,diabetes))
diabetes_scaled
b$var
b$svd
b
b$var
b$eig
res.pca <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
ggplotly(fviz_cos2(res.pca, choice = "var"))
res.pca <- PCA(diabetes_scaled, graph=TRUE, ncp=3)
ggplotly(fviz_cos2(b, choice = "var", axes = 3))
barplot(b$eig[, 2], names.arg=1:nrow(b$eig),
main = "Variances",
xlab = "Principal Components",
ylab = "Percentage of variances",
col ="steelblue")
# Add connected line segments to the plot
lines(x = 1:nrow(b$eig), b$eig[, 2],
type="b", pch=19, col = "red")
fviz_screeplot(b, ncp=5)
fviz_pca_var(b, col.var="contrib")+
scale_color_gradient2(low="blue", mid="white",
high="red", midpoint=55)+theme_bw()
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean() %>%
ggplotly()
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean() +
ggplotly()
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$eig
res.pca$var$contrib
res.pca$eig
diabetes_scaled
diabetes_scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
nrow(diabetes)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
scaled
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic))
diabetes
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
scaled
diabetes_scaled <- as.data.frame(scaled)
scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
res.pca$svd$U
res.pca$svd
res.pca$svd %>%
kable() %>%
kable_styling(full_width = F, position = "left")
res.pca$svd
res.pca$svd$U %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes_scaled <- res.pca$svd$U #diabetes_scaled %>% select(Glucose, SpO2, IMC)
ggplotly(fviz_nbclust(res.pca$svd$UU, kmeans, method = "silhouette", k.max = 100))
res.pca$svd$U
diabetes_scaled <- as.data.frame(res.pca$svd$U) #diabetes_scaled %>% select(Glucose, SpO2, IMC)
ggplotly(fviz_nbclust(res.pca$svd$UU, kmeans, method = "silhouette", k.max = 100))
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 100))
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic, -Date)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes_scaled <- as.data.frame(res.pca$svd$U) #diabetes_scaled %>% select(Glucose, SpO2, IMC)
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes_scaled <- diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate)
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic, -Date)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes_scaled <- diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate)
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
diabetes_scaled
model <- kmeans(diabetes_scaled, 6, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, y = HeartRate, color=Cluster)) +
geom_line() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model$betweenss / model$tot.withinss
model$betweenss
model$tot.withinss
res.pca$ind
res.pca$call
res.pca$ind
res.pca$ind$contrib
res.pca$ind$coord
diabetes_scaled <- res.pca$ind$coord #diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate)
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
res.pca$ind$coord[,1:2]
diabetes_scaled <- res.pca$ind$coord[,1:2] #diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate)
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model$betweenss / model$tot.withinss
diabetes_with_clusters
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = SpO2, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = SpO2, y = Glucose, color=Cluster)) +
geom_line() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
fviz_pca_var(res.pca, col.var="var") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="var") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
fviz_cluster(kmeans, data = res.pca$ind$coord)
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
nrow(diabetes)
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic, -Date)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
fviz_cluster(kmeans, data = res.pca$ind$coord)
res.pca$ind$coord
fviz_cluster(kmeans, data = res.pca$ind$coord)
fviz_cluster(kmeans, data = as.data.frame(res.pca$ind$coord))
as.data.frame(res.pca$ind$coord)
fviz_cluster(kmeans, data = as.data.frame(res.pca$ind$coord[,1:2]))
library(factoextra)
fviz_cluster(kmeans, data = as.data.frame(res.pca$ind$coord[,1:2]))
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lloyd")
fviz_cluster(model, data = as.data.frame(res.pca$ind$coord[,1:2]))
model <- kmeans(diabetes_scaled, 10, iter.max = 100, algorithm = "Lloyd")
fviz_cluster(model, data = as.data.frame(res.pca$ind$coord[,1:2]))
fviz_cluster(model, data = as.data.frame(res.pca$ind$coord))
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = SpO2, y = Glucose, color=Cluster)) +
geom_line() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lldfoyd")
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "MacQueen")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = SpO2, y = Glucose, color=Cluster)) +
geom_line() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_line() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
diabetes_with_clusters
model$betweenss / model$tot.withinss
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "MacQfdgueen")
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Hartigan-Wong")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Hartigan-sd")
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Forgy")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "MacQueen")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
diabetes_scaled
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=2)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
diabetes_scaled <- res.pca$ind$coord #diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate)
diabetes_scaled
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "MacQueen")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Hartigan-Wong")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=2)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes_scaled <- diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate) # res.pca$ind$coord #
ggplotly(fviz_nbclust(diabetes_scaled, kmeans, method = "silhouette", k.max = 10))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Hartigan-Wong")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model$betweenss / model$tot.withinss
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
mutate(HeartRate = (HeartRate.x + HeartRate.y) / 2) %>%
mutate(AvBloodPressure = Diastolic + (1/3) * (Systolic - Diastolic)) %>%
select(-Patient, -Height, -Weight, -HeartRate.x, -HeartRate.y, -Systolic ,-Diastolic)
preProcessDiabetes <- preProcess(diabetes, method = c("scale"))
scaled <- predict(preProcessDiabetes,diabetes)
diabetes_scaled <- as.data.frame(scaled)
res.pca <- PCA(diabetes_scaled, graph=FALSE, ncp=3)
fviz_pca_var(res.pca, col.var="contrib") +
scale_color_gradient2(low="blue", mid="white", high="red", midpoint=55) +
theme_clean()
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
res.pca$var$contrib %>%
kable() %>%
kable_styling(full_width = F, position = "left")
42.338570	 + 47.281789	+ 3.824225
57.993593+ 26.158914	+ 5.900827
9.1992338+33.7043427+50.5796349
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose,y=AvBloodPressure color=Cluster)) +
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose,y=AvBloodPressure, color=Cluster)) +
geom_point() +
facet_grid(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose,y=AvBloodPressure, color=Cluster)) +
geom_point() +
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose,y=HeartRate, color=Cluster)) +
geom_point() +
ggtitle("K-Means Clustering en Componentes Principales"))
diabetes_scaled <- diabetes_scaled %>% select(Glucose, AvBloodPressure, HeartRate) # res.pca$ind$coord #
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(y=Glucose, color=Cluster)) +
geom_histogram() +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster)
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=IMC, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 120, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 100, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Hartigan-Wonsdg")
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
model$betweenss / model$tot.withinss
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Glucose, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 100, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
diabetes_with_clusters
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=AvBloodPressure, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 100, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=Sp02, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 100, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x=SpO2, color=Cluster)) +
geom_histogram() +
facet_grid(~Cluster) +
geom_vline(xintercept = 100, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
ggtitle("Agrupación de la glucosa en los pacientes"))
