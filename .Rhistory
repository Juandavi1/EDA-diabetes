p <- p <- ggplot(glucose, aes(x = Glucose)) +
geom_histogram(binwidth = 10,color="#0A2F35", fill="#12492F", alpha=0.7) +
labs(x = "Glucosa", y = "Frecuencia") +
theme_clean() +
ggtitle("Distribución de glucosa")
ggplotly(p)
glucose$IsMorning <- ifelse(is_morning(glucose$Date), "Morning", "Afternoon")
glucose$IsMorning <- factor(glucose$IsMorning)
ggplotly(ggplot(glucose, aes(x = Glucose, fill = IsMorning)) +
geom_histogram(binwidth = 10, alpha=0.7, color="#0A2F35") +
facet_grid(IsMorning ~ .) +
labs(x = "Glucosa", y = "Frecuencia") +
ggtitle("Distribución de glucosa por la mañana y por la tarde") +
theme_fivethirtyeight())
morning_critir_value <- 100
ggplotly(ggplot(glucose %>% filter(IsMorning=="Morning"), aes(x = Glucose)) +
geom_histogram(binwidth = 10, alpha=0.7, color="#0A2F35", fill="#12492F") +
labs(x = "Glucosa", y = "Frecuencia") +
ggtitle("Distribución de glucosa en la mañana") +
geom_vline(xintercept = morning_critir_value, color = "red", linetype = "dashed", size = 1, show.legend = TRUE) +
theme_fivethirtyeight())
glucose <- glucose %>%
mutate(Date = parse_date_time(Date, orders = "mdy HM"))
sum(is.na(glucose$Date))
oximetry %>%
summarise_all(~ sum(is.na(.))) %>%
gather() %>%
kable() %>%
kable_styling(full_width = F, position = "left")
oximetry <- read_csv("data/Oximetry.csv", col_types = cols())
oximetry
oximetry %>%
summarise_all(~ sum(is.na(.))) %>%
gather() %>%
kable() %>%
kable_styling(full_width = F, position = "left")
)
kable(summary(oximetry)) %>% kable_styling()
oximetry <- oximetry %>%
mutate(Date = parse_date_time(Date, orders = "mdy HM"))
bloodPressure %>% filter(Systolic == 0 | Diastolic == 0 | AvBloodPressure == 0 | HeartRate == 0)
bloodPressure <- bloodPressure %>% filter(Systolic == 0 | Diastolic == 0 | AvBloodPressure == 0 | HeartRate == 0)
bloodPressure <- bloodPressure %>%
mutate(Date = parse_date_time(Date, orders = "mdy HM"))
imc %>%
summarise_all(~ sum(is.na(.))) %>%
gather() %>%
kable() %>%
kable_styling(full_width = F, position = "left")
imc <- imc %>%
mutate(Date = parse_date_time(Date, orders = "mdy HM"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning)
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient" , "Date")) %>%
inner_join(imc, by = c("Patient", "Date"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient" , "Date"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient" , "Date"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient"))
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date"))
diabetes
diabetes[diabetes$Patient == 1369, ]
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = "Patient")
diabetes
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date"))
diabetes
bloodPressure
bloodPressure <- read_csv("data/bloodPressure.csv", col_types = cols())
bloodPressure
bloodPressure %>% filter(Systolic == 0 | Diastolic == 0 | AvBloodPressure == 0 | HeartRate == 0)
bloodPressure2 <- bloodPressure %>% filter(Systolic != 0 | Diastolic != 0 | AvBloodPressure != 0 | HeartRate != 0)
bloodPressure2
bloodPressure <- bloodPressure %>% filter(Systolic != 0 | Diastolic != 0 | AvBloodPressure != 0 | HeartRate != 0)
bloodPressure <- bloodPressure %>%
mutate(Date = parse_date_time(Date, orders = "mdy HM"))
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning)
scaled <- scale(diabetes)
diabetes %>%
cor() %>%
ggcorrplot()
diabetes %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
data.pca <- princomp(diabetes %>%cor())
summary(data.pca)
data.pca$loadings[, 1:2]
fviz_eig(data.pca, addlabels = TRUE)
ggplotly(fviz_eig(data.pca, addlabels = TRUE))
fviz_pca_var(data.pca, col.var = "black")
fviz_cos2(data.pca, choice = "var", axes = 1:2)
fviz_pca_var(data.pca, col.var = "cos2",
gradient.cols = c("black", "orange", "green"),
repel = TRUE)
scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
PCA <- prcomp(scaled)
componentes_seleccionados <- PCA$sdev > 1.02
componentes_principales <- PCA$x[, componentes_seleccionados]
componentes_principales <- as.data.frame(componentes_principales)
data_plot <- data.frame(PC1 = componentes_principales$PC1,
PC2 = componentes_principales$PC2)
fviz_eig(PCA$pcs)
fviz_eig(PCA)
ggplot(data_with_clusters, aes(x = PC1, y = PC2, color = factor(Cluster))) +
geom_point() +
geom_point(data = centroides, aes(x = PC1, y = PC2),
color = "black", size = 3, shape = 17) +
labs(x = "Componente Principal 1", y = "Componente Principal 2",
title = "Gráfico de Componentes Principales con Clusters K-Means") +
scale_color_discrete(name = "Cluster")
PCA$sdev
fviz_cos2(data.pca, choice = "var", axes = 1:2)
fviz_cos2(PCA, choice = "var", axes = 1:2)
PCA
biplot(PCA)
pca_data <- as.data.frame(PCA$x)
model <- kmeans(pca_data, 3, iter.max = 1000, nstart = 25, algorithm = "Lloyd")
print(kmeans_result)
print(model)
iris_pca_data$cluster <- as.factor(kmeans_result$cluster)
PCA$cluster <- as.factor(model$cluster)
PCA$cluster <- as.factor(model$cluster)
ggplot(PCA, aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
ggtitle("K-Means Clustering en Componentes Principales")
PCA <- as.data.frame(PCA)
ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
ggtitle("K-Means Clustering en Componentes Principales")
pca_data
pca_data$cluster <- as.factor(model$cluster)
ggplot(pca_data, aes(x = PC1, y = PC2, color = cluster)) +
geom_point() +
ggtitle("K-Means Clustering en Componentes Principales")
library(cluster)
silhouette_score <- silhouette(model$cluster, dist(pca_data))
plot(silhouette_score)
cor(pca_data)
pca_data
cor(pca_data %>% select(-cluster))
ggcorplot(cor(pca_data %>% select(-cluster)))
ggcorrplot(cor(pca_data %>% select(-cluster)))
ggplotly(ggcorrplot(cor(pca_data %>% select(-cluster))))
pca_data
colnames(diabetes)
PCA
colnames(diabetes)
original_variable_names <- colnames(diabetes)
colnames(pca_data)
colnames(pca_data)[,-1]
original_variable_names
colnames(pca_data)
pca_data$x
PCA$x
scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
PCA <- prcomp(scaled)
fviz_eig(PCA)
fviz_cos2(PCA, choice = "var", axes = 1:2)
PCA$var
biplot(PCA)
fviz_cos2(PCA, choice = "var", axes = 1:2)
biplot(PCA)
colnames(fviz_cos2(PCA, choice = "var", axes = 1:2))
fviz_cos2(PCA, choice = "var", axes = 1:2)
biplot(PCA)
pca_data$rotation
PCA$rotation
colnames(PCA$rotation)
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
model <- kmeans(diabetes, 3, iter.max = 1000, nstart = 25, algorithm = "Lloyd")
diabetes$cluster <- as.factor(model$cluster)
diabetes
diabetes$cluster
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes
model <- kmeans(diabetes, 2, iter.max = 1000, nstart = 25, algorithm = "Lloyd")
diabetes
as.factor(model$cluster)
diabetes$cluster <- as.factor(model$cluster)
diabetes
model <- kmeans(diabetes, 2, algorithm = "Lloyd")
diabetes
as.factor(model$cluster)
diabetes
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes
model <- kmeans(diabetes, 2, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model <- kmeans(diabetes, 2, iter.max = 1000, algorithm = "Lloyd")
model
a <- as.factor(model$cluster)
a
diabetes_with_clusters <- cbind(diabetes, Cluster = model$cluster)
diabetes_with_clusters
ggplot(diabetes_with_clusters, aes(x = glucose, color = cluster)) +
geom_histogram() +
ggtitle("K-Means Clustering en Componentes Principales")
ggplot(as.data.frame(diabetes_with_clusters), aes(x = glucose, color = cluster)) +
geom_histogram() +
ggtitle("K-Means Clustering en Componentes Principales")
as.data.frame(diabetes_with_clusters)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = Cluster)) +
geom_histogram() +
ggtitle("K-Means Clustering en Componentes Principales")
ggplot(diabetes_with_clusters, aes(x = Glucose, color = Cluster)) +
geom_histogram() +
ggtitle("K-Means Clustering en Componentes Principales")
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = Cluster)) +
geom_histogram() +
ggtitle("K-Means Clustering en Componentes Principales")
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = Cluster)) +
geom_histogram() +
facet_wrap(~cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
diabetes_with_clusters
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, color = "red")) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
model <- kmeans(diabetes, 3, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
model <- kmeans(diabetes, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
diabetes
createDataPartition
index <- createDataPartition(diabetes$Glucose, p = 0.8)
diabetes[["Glucose"]]
diabetes
class(diabetes)
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale() %>%
as.vector()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date")) %>%
as.vector()
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale() %>%
as.vector()
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning) %>%
scale()
class(diabetes)
as.data.frame(diabetes)
index <- createDataPartition(as.data.frame(diabetes), p = 0.8, list = FALSE)
as.data.frame(diabetes)
index <- createDataPartition(as.data.frame(diabetes)$Glucose, p = 0.8, list = FALSE)
index
model <- kmeans(diabetes, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose)) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster, color = Cluster)) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster, color = "white")) +
geom_histogram() +
facet_wrap(~Cluster)
ggplot(as.data.frame(diabetes_with_clusters), aes(x = Glucose, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster)
silhouette_score <- silhouette(model$cluster, dist(diabates))
silhouette_score <- silhouette(model$cluster, dist(diabetes_with_clusters))
plot(silhouette_score)
diabetes_with_clusters
ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster)
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster)
ggtitle("K-Means Clustering en Componentes Principales"))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
diabetes
data_reverted <- scale(diabetes, center = FALSE, scale = 1)
diabetes
data_reverted <- scale(diabetes, center = FALSE, scale = 1)
data_reverted <- scale(diabetes, center = FALSE)
data_reverted
diabetes <- glucose %>%
inner_join(oximetry, by = c("Patient", "Date")) %>%
inner_join(imc, by = c("Patient", "Date")) %>%
inner_join(bloodPressure, by = c("Patient", "Date"))
diabetes <- diabetes %>%
mutate(Date = as.numeric(Date)) %>%
select(-Patient, -IsMorning)
diabetes_scaled <-  diabetes %>%
scale()
diabetes_scaled %>%
cor() %>%
ggcorrplot() %>%
ggplotly()
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
diabetes_scaled_with_clusters <- cbind(diabetes_scaled, Cluster = factor(model$cluster))
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 3, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
diabetes_scaled_with_clusters <- cbind(diabetes_scaled, Cluster = factor(model$cluster))
```{r}
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
model <- kmeans(diabetes_scaled, 2, iter.max = 100, algorithm = "Lloyd")
diabetes_with_clusters <- cbind(diabetes, Cluster = factor(model$cluster))
diabetes_scaled_with_clusters <- cbind(diabetes_scaled, Cluster = factor(model$cluster))
```{r}
ggplotly(ggplot(as.data.frame(diabetes_with_clusters), aes(x = IMC, fill = Cluster)) +
geom_histogram(color = "white") +
facet_wrap(~Cluster) +
ggtitle("K-Means Clustering en Componentes Principales"))
library(rpart)
modelo_arbol <- rpart(Cluster ~ ., data = diabetes, method = "class")
modelo_arbol <- rpart(Cluster ~ ., data = diabetes_with_clusters, method = "class")
install.packages("rpart.plot")
library(rpart.plot)
library(rpart)
prp(modelo_arbol)
particion <- createDataPartition(diabetes_with_clusters$Cluster, p = 0.7, list = FALSE)
train <- diabetes_with_clusters[particion, ]
test <- diabetes_with_clusters[-particion, ]
modelo_arbol <- rpart(Cluster ~ ., data = train, method = "class")
prp(modelo_arbol)
y_pred <- predict(modelo_arbol, newdata = test)
y_pred
y_pred[[1]]
y_pred[1]
y_pred[1]
y_pred
y_pred[,1]
nrow(y_pred[,1])
length(y_pred[,1])
length(y_pred[,1] > 0.5)
length(y_pred[,1] > 0.5)
y_pred
y_pred_cluster <- if_else(y_pred[,2] > 0.5, 2, 1)
y_pred_cluster
test
accuracy(test$Cluster, y_pred_cluster)
y_pred <- predict(modelo_arbol, newdata = test, type = "prob")
y_pred <- predict(modelo_arbol, newdata = test, type = "prob")
y_pred_cluster <- if_else(y_pred[,2] > 0.5, 2, 1)
accuracy(test$Cluster, y_pred_cluster)
y_pred_cluster <- if_else(y_pred[,2] > 0.5, 2, 1)
y_pred_cluster <- factor(y_pred_cluster, levels = levels(test$Cluster))
accuracy(test$Cluster, y_pred_cluster)
ggplotly(ggcorrplot(cor(scaled)))
ggplotly(ggcorrplot(cor(dianetes)))
# Configuración del documento
options(
knitr.table.format = "html",
knitr.table.css = "font-size: 24pt;",
knitr.table.bg = "#F5F5F5"
)
# Cargar paquetes
library(tidyverse)
library(ggplot2)
library(plotly)
# Configuración de la visualización de datos
theme_set(theme_minimal(base_size = 18))
# Cargar datos
glucose <- read_csv("data/glucose.csv")
# Cargar datos
glucose <- read_csv("data/glucose.csv")
source("~/Desktop/final /dev.R")
setwd("~/Desktop/final ")
shiny::runApp()
runApp()
runApp()
paste0("hola", "tu")
paste("hola", "tu")
runApp()
Sys.setenv(OPENAI_API_KEY = "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")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
